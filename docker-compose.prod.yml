version: "3.8"

services:
  ###########################################################################
  # 1. TRAEFIK REVERSE PROXY
  ###########################################################################
  traefik:
    image: "traefik:v3.3"
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Letâ€™s Encrypt/ACME config:
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app_network

  ###########################################################################
  # 2. OPENSEARCH WITH SECURITY
  ###########################################################################
  opensearch:
    image: opensearchproject/opensearch:2
    container_name: opensearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
      # If you have custom config files:
      # - ./opensearch/config/opensearch.yml:/usr/share/opensearch/config/opensearch.yml
      # - ./opensearch/config/internal_users.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.opensearch.rule=Host(`${OPENSEARCH_URL}`)"
      - "traefik.http.routers.opensearch.entrypoints=websecure"
      - "traefik.http.routers.opensearch.tls.certresolver=myresolver"
      - "traefik.http.services.opensearch.loadbalancer.server.port=9200"

  ###########################################################################
  # 3. OPENSEARCH DASHBOARDS
  ###########################################################################
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2
    container_name: opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=["https://opensearch:9200"]
    depends_on:
      - opensearch
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.opensearchdash.rule=Host(`${OPENSEARCH_DASHBOARD_URL}`)"
      - "traefik.http.routers.opensearchdash.entrypoints=websecure"
      - "traefik.http.routers.opensearchdash.tls.certresolver=myresolver"
      - "traefik.http.services.opensearchdash.loadbalancer.server.port=5601"

  db:
    image: pgvector/pgvector:pg16
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  app_network:
    driver: bridge

volumes:
  traefik:
  opensearch_data:
